#include <math.h>
#include <PubSubClient.h>
#include <SPI.h>
#include <Ethernet.h>
#define nonormal 8 // Пин светоидиода, работающего когда температура проблемна
#define normal 9 // Пин светоидиода, работающего когда температура нормальна
#define temperature A0 // Пин терморезистора
#define changing 10 // Пин светодиоида, работающего от mqtt-запросов
 
boolean kek = false; // Почему-то не работает через него. Поменять 
 
// Update these with values suitable for your network.
byte mac[] = { 0xDE, 0xED, 0xBA, 0xFE, 0xFE, 0xED };
IPAddress ip(192,168,1,109);
 
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  String myString = "w";
  for (int i=0;i<length;i++) {
    Serial.print((char)payload[i]);
    myString = myString + (char)payload[i]; 
  }
  Serial.println();
  Serial.println(myString); // Для проверки
  if (myString == "woff"){ 
    digitalWrite(changing, LOW);
    Serial.println("LOWER");
    kek = false;
  }
  if (myString == "won"){
    digitalWrite(changing, HIGH);
    Serial.println("Higher");
    kek = true;
  }
}
 
 
EthernetClient ethClient;
PubSubClient client(ethClient);
 
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) 
  {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect("identification_name", "#", "#")) { // # - название юзера и пороль, если есть
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("test","hello world");
      // ... and resubscribe
      client.subscribe("output");
      } 
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}
 
void setup()
{
  Serial.begin(9600);
 
  client.setServer("#", 1883); # - айпи или адресс
  client.setCallback(callback);
 
  Ethernet.begin(mac, ip);
  // Allow the hardware to sort itself out
  delay(1500);
 
  pinMode(nonormal, OUTPUT);
  pinMode(normal, OUTPUT);
  pinMode(changing, OUTPUT);
  pinMode(temperature, INPUT);
}
 
void loop()
{
  delay(2000);
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
 
  float voltage = analogRead(temperature) * 5.0 / 1024.0;
  float r1 = voltage / (5.0 - voltage);
  float temperature = 1./( 1./(4300)*log(r1)+1./(25. + 273.) ) - 273;
  String stringOne = String(temperature, 3);
  char charBuf[50];
  stringOne.toCharArray(charBuf, 50);
  client.publish( "test", charBuf );
 
  if (temperature > 30.0){
    digitalWrite(nonormal, HIGH);
    digitalWrite(normal, LOW);
  }
  else{
    digitalWrite(normal, HIGH);
    digitalWrite(nonormal, LOW);
  }
  if (kek == true){
    digitalWrite(changing, HIGH);
  }
  else{
    digitalWrite(changing, LOW);
  }
}

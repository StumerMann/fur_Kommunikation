#include <math.h>
#include <PubSubClient.h>
#include <SPI.h>
#include <Ethernet.h>

#define temperatureInsideSensor 1 // датчик температуры внутри помещения
#define humidityInsideSensor 2 // датчик влажности внутри помещения
#define temperatureOutsideSensor 3 // датчик температуры снаружи помещения
#define conditionerFirst 4 // два кондиционера
#define conditionerSecond 5 // два кондиционера
#define fan 6 // вентелятор
#define heater 7 // обогреватель 

float temperatureInside; 
float temperatureOutside;
float humidity;

int conditionerFirstMode = 2; // 0 - всегда выключен; 1 - всегда включен; 2 - обычный ( ниже актуально также )
int conditionerSecondMode = 2; 
int fanMode = 2;
int heaterMode = 2;


// Update these with values suitable for your network.
byte mac[] = { 0xDE, 0xED, 0xBA, 0xFE, 0xFE, 0xED };
IPAddress ip(192,168,1,109);

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
}

EthernetClient ethClient;
PubSubClient client(ethClient);

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) 
  {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("identification_name", "#", "#")) { // # - название юзера и пороль, если есть
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("test","hello world");
      // ... and resubscribe
      client.subscribe("output");
      } 
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}
 
void setup()
{
  Serial.begin(9600);
 
  client.setServer("#", 1883); # - айпи или адресс
  client.setCallback(callback);
 
  Ethernet.begin(mac, ip);
  // Allow the hardware to sort itself out
  delay(1500);
  pinMode(temperatureInsideSensor, INPUT);
  pinMode(humidityInsideSensor, INPUT);
  pinMode(temperatureOutsideSensor, INPUT);
  pinMode(conditionerFirst, OUTPUT);
  pinMode(conditionerSecond, OUTPUT);
  pinMode(fan, OUTPUT);
  pinMode(heater, OUTPUT);
}
 
void loop()
{
  delay(2000);
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  
  temperatureInside = 0; // датчики измеряют температуру
  temperatureOutside = 0;
  humidity = 0; 
  
  if (temperatureOutside <= 15 && humidity < 60 && temperatureInside >= 22 && fanMode == 2){
    digitalWrite(fan, HIGH);
    digitalWrite(conditionerFirst, LOW);
    digitalWrite(conditionerSecond, LOW);
  }
  else if (temperatureOutside > 15 || humidity >= 60 || temperatureInside <= 20){
    if (fanMode == 2){
      digitalWrite(fan, LOW);
    }
    if (temperatureInside > 24 && conditionerFirstMode == 2){
      digitalWrite(conditionerFirst, HIGH);
      if (temperatureInside > 26){
        digitalWrite(conditionerSecond, HIGH);
      }
    }
    else if(temperatureInside <= 22){
      digitalWrite(conditionerFirt, LOW);
      digitalWrite(conditionerSecond, HIGH);
    }
  }
  
  if (temperatureInside < 18 && heaterMode == 2){
    digitalWrite(heater, HIGH);
  }
  else if (temperatureInside >= 20 && heaterMode = 2){
    digitalWrite(heater, LOW);
  }
}
